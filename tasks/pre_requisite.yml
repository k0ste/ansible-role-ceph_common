---
- name: "ceph_common | Assert that ansible facts gathered successfully"
  ansible.builtin.assert:
    that:
      - "hostvars[inventory_hostname]['ansible_os_family'] is defined"
    fail_msg: "'ansible_facts' not found. Please enable facts gathering"
    quiet: "true"
- name: "ceph_common | Add the OS specific varibles"
  ansible.builtin.include_vars:
    file: "{{ hostvars[inventory_hostname]['ansible_os_family'] + '.yml' }}"
- name: "ceph_common | Set facts about ceph_common role"
  ansible.builtin.set_fact:
    ceph_common_systemd_dir: "/etc/systemd/system"
    ceph_common_package_state: "{{ hostvars[inventory_hostname]['ceph_common'] |
      community.general.json_query('[].package_state | [0]') | default(omit) }}"
    ceph_common_systemd: "{{ ceph_common |
      community.general.json_query('[].systemd[] | [0]') | default(omit) }}"
    ceph_common_settings: "{{ hostvars[inventory_hostname]['ceph_common'] |
      community.general.json_query('[].settings[]') | default(omit) }}"
    ceph_common_keyrings_types:
      "{{ hostvars[inventory_hostname]['ceph_common'] |
      community.general.json_query(\"[].keyrings[?type!='client'].type[]\") }}"
    ceph_common_keyrings_clients:
      "{{ hostvars[inventory_hostname]['ceph_common'] |
      community.general.json_query(\"[].keyrings[?type=='client'][]\") }}"
    ceph_common_keyrings_workdir_bootstrap:
      "{{ hostvars[inventory_hostname]['ceph_common'] |
      community.general.json_query(\"[].keyrings[?contains(type, `bootstrap`)]
      []\") }}"
    ceph_common_keyrings_workdir_apps:
      "{{ hostvars[inventory_hostname]['ceph_common'] |
      community.general.json_query(\"[].keyrings[?contains(`[''mds'', ''mgr'',
      ''mon'', ''radosgw'']`, type)][]\") }}"
    ceph_common_rgw_certificate:
      "{{ hostvars[inventory_hostname]['ceph_common'] |
      community.general.json_query('[].rgw_certificate | [0]') |
      default(omit) }}"
    ceph_common_rbdmap: "{{ hostvars[inventory_hostname]['ceph_common'] |
      community.general.json_query('[].rbdmap[]') | default(omit) }}"
- name: "ceph_common | Assert that ceph_common package state in valid value"
  ansible.builtin.assert:
    that:
      - "vars['ceph_common_package_state'] in ['present', 'latest']"
    fail_msg: "'package_state' must be in 'present' or 'latest'"
    quiet: "true"
  when:
    - "vars['ceph_common_package_state'] is defined"
    - "vars['ceph_common_package_state'] != ''"
- name: "ceph_common | Set ceph_common package state to present state from
    empty state"
  ansible.builtin.set_fact:
    ceph_common_package_state: 'present'
  when:
    - "vars['ceph_common_package_state'] is defined"
    - "vars['ceph_common_package_state'] == ''"
- name: "ceph_common | Import RGW cert checks"
  ansible.builtin.import_tasks:
    file: "prereq.d/rgw_cert_checks.yml"
- name: "ceph_common | Create conf.d catalogs"
  ansible.builtin.file:
    path: "{{ hostvars[inventory_hostname]['ceph_common_conf_dest'] }}"
    state: "directory"
    owner: "root"
    group: "root"
    mode: "0755"
- name: "ceph_common | Create Ceph working catalogs"
  ansible.builtin.file:
    path: "{{ hostvars[inventory_hostname]['ceph_common_workdir_dest'] }}"
    state: "directory"
    owner: "{{ hostvars[inventory_hostname]['ceph_common_user_id'] }}"
    group: "{{ hostvars[inventory_hostname]['ceph_common_user_id'] }}"
    mode: "0750"
- name: "ceph_common | Create Ceph working catalogs"
  ansible.builtin.file:
    path: "{{ hostvars[inventory_hostname]['ceph_common_workdir_dest'] ~ '/' ~
      ceph_dir }}"
    state: "directory"
    owner: "{{ hostvars[inventory_hostname]['ceph_common_user_id'] }}"
    group: "{{ hostvars[inventory_hostname]['ceph_common_user_id'] }}"
    mode: "0750"
  loop: "{{ vars['ceph_common_keyrings_types'] | flatten(levels=1) }}"
  loop_control:
    loop_var: "ceph_dir"
    label: "{{ hostvars[inventory_hostname]['ceph_common_workdir_dest'] + '/' ~
      ceph_dir }}"
  when:
    - "ceph_dir is defined"
    - "ceph_dir != []"
    - "ceph_dir != ''"
- name: "ceph_common | Create override systemd service directory [ceph-mgr]"
  ansible.builtin.file:
    path: "{{ vars['ceph_common_systemd_dir'] + '/ceph-mgr@.service.d' }}"
    state: "directory"
    group: "root"
    owner: "root"
    mode: "0755"
    recurse: "no"
  when:
    - "vars['ceph_common_systemd']['mgr'] is defined"
    - "vars['ceph_common_systemd']['mgr'] != []"
    - "vars['ceph_common_systemd']['mgr'] != ''"
- name: "ceph_common | Create override systemd service directory
    [ceph-exporter]"
  ansible.builtin.file:
    path: "{{ vars['ceph_common_systemd_dir'] + '/ceph-exporter.service.d' }}"
    state: "directory"
    group: "root"
    owner: "root"
    mode: "0755"
    recurse: "no"
  when:
    - "vars['ceph_common_systemd']['exporter_hotfix'] is defined"
    - "vars['ceph_common_systemd']['exporter_hotfix'] == 'true'"
